package sort

import "cmp"

// 冒泡排序（Bubble Sort）是一种简单直观的排序算法。它的基本思想是通过多次遍历待排序的数组，每次比较相邻的两个元素，并根据大小顺序交换它们的位置，使得每次遍历后，最大的元素逐渐"冒泡"到数组的末尾。这个过程会重复进行，直到整个数组有序。

// ### 冒泡排序的步骤：

// 1. **从头开始遍历数组**，比较相邻的两个元素。
// 2. **如果前一个元素比后一个元素大**，就交换这两个元素的位置。
// 3. **继续遍历**，直到数组的末尾。
// 4. 重复上述步骤，**每次遍历可以确定一个最大元素**并将其放到正确的位置。
// 5. 对剩下的元素重复上述步骤，直到整个数组有序。

// ### 冒泡排序的特点：

// - **时间复杂度**：最坏情况和平均情况都是 \(O(n^2)\)，但如果数组本身是有序的，时间复杂度可以达到 \(O(n)\)。
// - **空间复杂度**：\(O(1)\)，只需要常数级别的额外空间。
// - **稳定性**：冒泡排序是一种稳定的排序算法，因为相同的元素不会交换位置。

func BubbleSort[T cmp.Ordered](arr []T) {
	n := len(arr)
	for i := 0; i < n-1; i++ {
		for j := 0; j < n-i-1; j++ {
			if arr[j] > arr[j+1] {
				arr[j], arr[j+1] = arr[j+1], arr[j]
			}
		}
	}
}
